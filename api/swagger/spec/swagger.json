{
  "openapi": "3.0.2",
  "info": {
    "description": "This is a sample swagger api docummentation.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "version": "0.0.9",
    "title": "Seed-Go-API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "localhost:7000"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "user management apis"
    },
    {
      "name": "api",
      "description": "you generic apis"
    },
    {
      "name": "articles",
      "description": "apis to create, edit, delete articles"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Health check",
        "description": "System health check",
        "operationId": "healthCheckId",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "handles user logins",
        "responses": {
          "200": {
            "description": "success login"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "forbidden"
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "refresh authentication tokens",
        "responses": {
          "200": {
            "description": "success login"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "forbidden"
          }
        }
      }
    },
    "/users/details": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get user details",
        "responses": {
          "200": {
            "description": "success login"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "forbidden"
          }
        }
      }
    },
    "/users/edit": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "edit profile",
        "responses": {
          "200": {
            "description": "success login"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "forbidden"
          }
        }
      }
    },
    "/articles/create": {
      "post": {
        "tags": [
          "articles"
        ],
        "summary": "create new article",
        "responses": {
          "200": {
            "description": "success login"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "forbidden"
          }
        }
      }
    },
    "/articles/list": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "list all user's articles",
        "responses": {
          "200": {
            "description": "success login"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "forbidden"
          }
        }
      }
    },
    "/articles/delete/{id}": {
      "delete": {
        "tags": [
          "articles"
        ],
        "summary": "delete an article",
        "responses": {
          "200": {
            "description": "success login"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "forbidden"
          }
        }
      }
    },
    "/v1/hello": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Hello",
        "description": "Just a hello",
        "operationId": "getHelloId",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/time": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Get Time",
        "description": "Get current time",
        "operationId": "getTimeId",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/web/": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Web static file",
        "description": "Demo bootstrap css",
        "operationId": "getWebId",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {}
  }
}